{"mappings":"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","sources":["<anon>","js/main.js"],"sourcesContent":["// Helper function to generate random numbers in a range\nfunction randomInRange(min, max) {\n    return Math.random() * (max - min) + min;\n}\nfunction initLavaLampEffect() {\n    const shapesContainer = document.querySelector('.gradient-shapes');\n    if (!shapesContainer) return;\n    const NUM_WAVES = 50;\n    const COLORS = [\n        'rgb(178, 255, 178)',\n        'rgb(144, 238, 144)',\n        'rgb(152, 251, 152)',\n        'rgb(255, 255, 255)' // White\n    ];\n    const fragment = document.createDocumentFragment();\n    for(let i = 0; i < NUM_WAVES; i++){\n        const wave = document.createElement('div');\n        const color = COLORS[i % COLORS.length];\n        const height = randomInRange(100, 200);\n        const width = randomInRange(300, 1000);\n        // Create more varied starting positions\n        const x = randomInRange(-50, 150);\n        const y = randomInRange(-50, 150);\n        // Randomize animation parameters\n        const duration = randomInRange(20, 40);\n        const delay = randomInRange(0, 20);\n        const direction = Math.random() > 0.5 ? 1 : -1;\n        // Set custom properties for dynamic animations\n        wave.style.setProperty('--wave-x', `${randomInRange(100, 200) * direction}px`);\n        wave.style.setProperty('--wave-y', `${randomInRange(100, 200) * direction}px`);\n        wave.style.setProperty('--wave-rotate', `${randomInRange(-180, 180)}deg`);\n        wave.style.setProperty('--wave-scale', randomInRange(0.8, 1.2).toString());\n        wave.style.setProperty('--duration', `${duration}s`);\n        wave.style.cssText += `\n            position: absolute;\n            width: ${width}px;\n            height: ${height}px;\n            left: ${x}%;\n            top: ${y}%;\n            background: ${color};\n            border-radius: 50% 50% 50% 50% / 20% 20% 80% 80%;\n            filter: blur(${height / 3}px);\n            animation: waveFloat var(--duration) ease-in-out infinite;\n            animation-delay: -${delay}s;\n            will-change: transform;\n            transform: translateZ(0);\n        `;\n        fragment.appendChild(wave);\n    }\n    shapesContainer.appendChild(fragment);\n}\ndocument.addEventListener('DOMContentLoaded', function() {\n    initLavaLampEffect();\n});\nfunction initNavigation() {\n    const navbar = document.querySelector('.navbar');\n    const hero = document.querySelector('.hero');\n    let lastScroll = 0;\n    let ticking = false;\n    function updateNav() {\n        const currentScroll = window.pageYOffset;\n        const heroHeight = hero.offsetHeight;\n        // Show/hide navbar based on scroll direction and position\n        if (currentScroll > lastScroll && currentScroll > heroHeight) // Scrolling down & past hero - hide navbar\n        navbar.classList.add('navbar-hidden');\n        else {\n            // Scrolling up - show navbar\n            navbar.classList.remove('navbar-hidden');\n            // Add background when scrolling\n            if (currentScroll > 50) navbar.classList.add('navbar-scrolled');\n            else navbar.classList.remove('navbar-scrolled');\n        }\n        lastScroll = currentScroll;\n        ticking = false;\n    }\n    window.addEventListener('scroll', ()=>{\n        if (!ticking) {\n            requestAnimationFrame(updateNav);\n            ticking = true;\n        }\n    });\n    // Initial check\n    updateNav();\n}\nfunction initValuePropSection() {\n    // Create background shapes\n    const shapesContainer = document.querySelector('.value-bg-shapes');\n    const numShapes = 5;\n    for(let i = 0; i < numShapes; i++){\n        const shape = document.createElement('div');\n        shape.className = 'bg-shape';\n        const size = Math.random() * 300 + 200;\n        const x = Math.random() * 100;\n        const y = Math.random() * 100;\n        shape.style.cssText = `\n            width: ${size}px;\n            height: ${size}px;\n            left: ${x}%;\n            top: ${y}%;\n            opacity: ${Math.random() * 0.5};\n        `;\n        shapesContainer.appendChild(shape);\n    }\n    // Scroll animations\n    const cards = document.querySelectorAll('.value-card');\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            if (entry.isIntersecting) {\n                entry.target.style.opacity = '1';\n                entry.target.style.transform = 'translateY(0)';\n            }\n        });\n    }, {\n        threshold: 0.1\n    });\n    cards.forEach((card)=>observer.observe(card));\n}\nfunction initTextColorEffect() {\n    const heroContent = document.querySelector('.hero-content');\n    const colorLayer = document.createElement('div');\n    colorLayer.className = 'color-interaction-layer';\n    // Create color points that follow blobs\n    function createColorPoints() {\n        const colors = [\n            'rgba(152, 251, 152, 0.8)',\n            'rgba(50, 205, 50, 0.7)',\n            'rgba(34, 139, 34, 0.6)',\n            'rgba(0, 128, 0, 0.7)',\n            'rgba(255, 255, 255, 0.6)'\n        ];\n        const points = [];\n        for(let i = 0; i < 5; i++){\n            const point = document.createElement('div');\n            point.style.cssText = `\n                position: absolute;\n                width: 200px;\n                height: 200px;\n                border-radius: 50%;\n                background: ${colors[i % colors.length]};\n                filter: blur(10px);\n                transition: all 0.5s ease;\n            `;\n            colorLayer.appendChild(point);\n            points.push(point);\n        }\n        return points;\n    }\n    // Animate color points\n    function animatePoints(points) {\n        points.forEach((point, index)=>{\n            const angle = index / points.length * Math.PI * 2;\n            const radius = 150;\n            const speed = 0.001;\n            let time = index * 1000;\n            function update() {\n                time += 16;\n                const x = Math.cos(angle + time * speed) * radius + 50;\n                const y = Math.sin(angle + time * speed) * radius + 50;\n                point.style.transform = `translate(${x}%, ${y}%)`;\n                requestAnimationFrame(update);\n            }\n            update();\n        });\n    }\n    // Initialize\n    heroContent.style.position = 'relative';\n    heroContent.insertBefore(colorLayer, heroContent.firstChild);\n    const points = createColorPoints();\n    animatePoints(points);\n}\nfunction initParallaxEffects() {\n    const parallaxElements = document.querySelectorAll('.parallax');\n    let ticking = false;\n    window.addEventListener('scroll', ()=>{\n        if (!ticking) {\n            window.requestAnimationFrame(()=>{\n                parallaxElements.forEach((element)=>{\n                    const speed = element.dataset.speed || 0.5;\n                    const rect = element.getBoundingClientRect();\n                    const scrolled = window.pageYOffset;\n                    if (rect.top <= window.innerHeight && rect.bottom >= 0) element.style.transform = `translateY(${scrolled * speed}px)`;\n                });\n                ticking = false;\n            });\n            ticking = true;\n        }\n    });\n}\nfunction initHoverEffects() {\n    const cards = document.querySelectorAll('.feature-card, .value-card');\n    cards.forEach((card)=>{\n        card.addEventListener('mousemove', (e)=>{\n            const rect = card.getBoundingClientRect();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n            card.style.setProperty('--mouse-x', `${x}px`);\n            card.style.setProperty('--mouse-y', `${y}px`);\n        });\n        card.addEventListener('mouseleave', ()=>{\n            card.style.setProperty('--mouse-x', '0px');\n            card.style.setProperty('--mouse-y', '0px');\n        });\n    });\n}\nfunction initSmoothScroll() {\n    const links = document.querySelectorAll('a[href^=\"#\"]');\n    links.forEach((link)=>{\n        link.addEventListener('click', (e)=>{\n            e.preventDefault();\n            const target = document.querySelector(link.getAttribute('href'));\n            if (target) target.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start'\n            });\n        });\n    });\n}\nfunction initIntersectionObserver() {\n    const options = {\n        root: null,\n        rootMargin: '0px',\n        threshold: 0.1\n    };\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            if (entry.isIntersecting) {\n                entry.target.classList.add('in-view');\n                if (entry.target.dataset.delay) entry.target.style.transitionDelay = entry.target.dataset.delay;\n            }\n        });\n    }, options);\n    document.querySelectorAll('.animate-on-scroll').forEach((el)=>observer.observe(el));\n}\nfunction initSuccessMetrics() {\n    const complianceData = [\n        {\n            month: 'Jan',\n            score: 45\n        },\n        {\n            month: 'Feb',\n            score: 52\n        },\n        {\n            month: 'Mar',\n            score: 63\n        },\n        {\n            month: 'Apr',\n            score: 71\n        },\n        {\n            month: 'May',\n            score: 78\n        },\n        {\n            month: 'Jun',\n            score: 86\n        }\n    ];\n    const billingData = [\n        {\n            month: 'Jan',\n            accuracy: 55\n        },\n        {\n            month: 'Feb',\n            accuracy: 65\n        },\n        {\n            month: 'Mar',\n            accuracy: 72\n        },\n        {\n            month: 'Apr',\n            accuracy: 80\n        },\n        {\n            month: 'May',\n            accuracy: 88\n        },\n        {\n            month: 'Jun',\n            accuracy: 95\n        }\n    ];\n    function createChart(container, data, options) {\n        // Clear any existing content\n        container.innerHTML = '';\n        const { valueKey, color, id } = options;\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('height', '100%');\n        svg.style.minHeight = '250px';\n        container.appendChild(svg);\n        // Create gradient with unique ID\n        const defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        const gradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        const gradientId = `gradient-${id}`;\n        gradient.setAttribute('id', gradientId);\n        gradient.setAttribute('x1', '0');\n        gradient.setAttribute('y1', '0');\n        gradient.setAttribute('x2', '0');\n        gradient.setAttribute('y2', '1');\n        const stop1 = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n        stop1.setAttribute('offset', '0%');\n        stop1.setAttribute('stop-color', color);\n        stop1.setAttribute('stop-opacity', '0.2');\n        const stop2 = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n        stop2.setAttribute('offset', '100%');\n        stop2.setAttribute('stop-color', color);\n        stop2.setAttribute('stop-opacity', '0');\n        gradient.appendChild(stop1);\n        gradient.appendChild(stop2);\n        defs.appendChild(gradient);\n        svg.appendChild(defs);\n        // Calculate dimensions\n        const margin = {\n            top: 20,\n            right: 30,\n            bottom: 40,\n            left: 50\n        };\n        const width = container.clientWidth - margin.left - margin.right;\n        const height = 250 - margin.top - margin.bottom;\n        // Create scales with adjusted domain for y-axis\n        const xScale = d3.scalePoint().domain(data.map((d)=>d.month)).range([\n            0,\n            width\n        ]).padding(0.5);\n        const yScale = d3.scaleLinear().domain([\n            40,\n            100\n        ]) // Start from 40 to make the changes more visible\n        .range([\n            height,\n            0\n        ]).nice();\n        // Create line generator\n        const line = d3.line().x((d)=>xScale(d.month)).y((d)=>yScale(d[valueKey])).curve(d3.curveMonotoneX);\n        // Create area generator\n        const area = d3.area().x((d)=>xScale(d.month)).y0(height).y1((d)=>yScale(d[valueKey])).curve(d3.curveMonotoneX);\n        // Create group element\n        const g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n        g.setAttribute('transform', `translate(${margin.left},${margin.top})`);\n        svg.appendChild(g);\n        // Add grid lines\n        const gridLines = g.appendChild(document.createElementNS('http://www.w3.org/2000/svg', 'g'));\n        gridLines.setAttribute('class', 'chart-grid');\n        yScale.ticks(5).forEach((tick)=>{\n            const line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n            line.setAttribute('x1', 0);\n            line.setAttribute('x2', width);\n            line.setAttribute('y1', yScale(tick));\n            line.setAttribute('y2', yScale(tick));\n            gridLines.appendChild(line);\n        });\n        // Add area\n        const areaPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        areaPath.setAttribute('class', 'chart-area');\n        areaPath.setAttribute('d', area(data));\n        areaPath.style.fill = `url(#${gradientId})`;\n        g.appendChild(areaPath);\n        // Add line\n        const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('class', 'chart-line');\n        path.setAttribute('d', line(data));\n        path.style.stroke = color;\n        g.appendChild(path);\n        // Add points\n        data.forEach((d)=>{\n            const point = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            point.setAttribute('class', 'chart-point');\n            point.setAttribute('cx', xScale(d.month));\n            point.setAttribute('cy', yScale(d[valueKey]));\n            point.setAttribute('r', 6);\n            point.style.stroke = color;\n            g.appendChild(point);\n        });\n        // Add axes\n        const xAxis = g.appendChild(document.createElementNS('http://www.w3.org/2000/svg', 'g'));\n        xAxis.setAttribute('class', 'chart-axis');\n        xAxis.setAttribute('transform', `translate(0,${height})`);\n        data.forEach((d)=>{\n            const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n            text.setAttribute('class', 'chart-axis-label');\n            text.setAttribute('x', xScale(d.month));\n            text.setAttribute('y', 25);\n            text.setAttribute('text-anchor', 'middle');\n            text.textContent = d.month;\n            xAxis.appendChild(text);\n        });\n        const yAxis = g.appendChild(document.createElementNS('http://www.w3.org/2000/svg', 'g'));\n        yAxis.setAttribute('class', 'chart-axis');\n        yScale.ticks(5).forEach((tick)=>{\n            const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n            text.setAttribute('class', 'chart-axis-label');\n            text.setAttribute('x', -10);\n            text.setAttribute('y', yScale(tick));\n            text.setAttribute('text-anchor', 'end');\n            text.setAttribute('dominant-baseline', 'middle');\n            text.textContent = `${tick}%`;\n            yAxis.appendChild(text);\n        });\n    }\n    // Initialize charts with unique IDs\n    const complianceChart = document.querySelector('.compliance-chart');\n    const billingChart = document.querySelector('.billing-chart');\n    if (complianceChart) createChart(complianceChart, complianceData, {\n        valueKey: 'score',\n        color: '#34D399',\n        id: 'compliance'\n    });\n    if (billingChart) createChart(billingChart, billingData, {\n        valueKey: 'accuracy',\n        color: '#0B4B3F',\n        id: 'billing'\n    });\n}\n// How It Works Section Functionality\nfunction initHowItWorks() {\n    const stepButtons = document.querySelectorAll('.step-nav-button');\n    const stepPanels = document.querySelectorAll('.step-panel');\n    const beforeAfterToggles = document.querySelectorAll('.before-after-toggle .toggle-btn');\n    // Initialize first step as active\n    if (stepButtons.length > 0 && stepPanels.length > 0) {\n        stepButtons[0].classList.add('active');\n        stepPanels[0].classList.add('active');\n    }\n    // Step navigation functionality\n    stepButtons.forEach((button, index)=>{\n        button.addEventListener('click', ()=>{\n            // Remove active class from all buttons and panels\n            stepButtons.forEach((btn)=>btn.classList.remove('active'));\n            stepPanels.forEach((panel)=>panel.classList.remove('active'));\n            // Add active class to clicked button and corresponding panel\n            button.classList.add('active');\n            stepPanels[index].classList.add('active');\n        });\n    });\n    // Before/After toggle functionality\n    beforeAfterToggles.forEach((toggle)=>{\n        toggle.addEventListener('click', ()=>{\n            const parent = toggle.closest('.before-after-toggle');\n            parent.querySelectorAll('.toggle-btn').forEach((btn)=>btn.classList.remove('active'));\n            toggle.classList.add('active');\n            // Get the visual container\n            const visualContainer = toggle.closest('.step-visual').querySelector('.visual-container');\n            // Toggle the visual state\n            if (toggle.dataset.state === 'before') {\n                visualContainer.style.opacity = '0.7';\n                setTimeout(()=>{\n                    // Update visual content for 'before' state\n                    visualContainer.style.opacity = '1';\n                }, 300);\n            } else {\n                visualContainer.style.opacity = '0.7';\n                setTimeout(()=>{\n                    // Update visual content for 'after' state\n                    visualContainer.style.opacity = '1';\n                }, 300);\n            }\n        });\n    });\n    // Add intersection observer for step animations\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            if (entry.isIntersecting) {\n                entry.target.style.opacity = '1';\n                entry.target.style.transform = 'translateY(0)';\n            }\n        });\n    }, {\n        threshold: 0.1\n    });\n    // Observe step panels for scroll animations\n    stepPanels.forEach((panel)=>{\n        panel.style.opacity = '0';\n        panel.style.transform = 'translateY(20px)';\n        observer.observe(panel);\n    });\n}\nfunction animateCounter(element, targetValue, duration = 2000) {\n    const startValue = 0;\n    const increment = targetValue / (duration / 16); // 60fps\n    let currentValue = startValue;\n    function updateCounter() {\n        currentValue = Math.min(currentValue + increment, targetValue);\n        if (targetValue % 1 === 0) // For whole numbers\n        element.textContent = Math.floor(currentValue) + (element.dataset.suffix || '');\n        else // For percentages or decimals\n        element.textContent = currentValue.toFixed(1) + (element.dataset.suffix || '');\n        if (currentValue < targetValue) requestAnimationFrame(updateCounter);\n    }\n    updateCounter();\n}\nfunction initMetricCounters() {\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            if (entry.isIntersecting) {\n                var _currentText_match;\n                const card = entry.target;\n                const numberElement = card.querySelector('.metric-number');\n                const targetValue = parseFloat(card.dataset.count);\n                // Add the + or % suffix if present in the HTML\n                const currentText = numberElement.textContent;\n                const suffix = ((_currentText_match = currentText.match(/[+%]/)) === null || _currentText_match === void 0 ? void 0 : _currentText_match[0]) || '';\n                numberElement.dataset.suffix = suffix;\n                animateCounter(numberElement, targetValue);\n                observer.unobserve(card);\n            }\n        });\n    }, {\n        threshold: 0.2\n    });\n    document.querySelectorAll('.metric-card').forEach((card)=>{\n        observer.observe(card);\n    });\n}\n// Initialize all sections\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    initLavaLampEffect();\n    initNavigation();\n    initParallaxEffects();\n    initHoverEffects();\n    initSmoothScroll();\n    initIntersectionObserver();\n    initSuccessMetrics();\n    initHowItWorks();\n    initMetricCounters();\n});\ndocument.addEventListener('DOMContentLoaded', function() {\n    const navbar = document.querySelector('.navbar');\n    let lastScroll = 0;\n    let ticking = false;\n    // Throttled scroll handler\n    window.addEventListener('scroll', ()=>{\n        if (!ticking) {\n            window.requestAnimationFrame(()=>{\n                const currentScroll = window.pageYOffset;\n                // Only trigger the hide/show after scrolling 50px\n                if (Math.abs(currentScroll - lastScroll) > 50) {\n                    if (currentScroll > lastScroll && currentScroll > 80) // Scrolling down - hide navbar\n                    navbar.classList.add('scrolled');\n                    else // Scrolling up - show navbar\n                    navbar.classList.remove('scrolled');\n                    lastScroll = currentScroll;\n                }\n                ticking = false;\n            });\n            ticking = true;\n        }\n    }, {\n        passive: true\n    });\n    // Mobile menu functionality\n    const mobileToggle = document.querySelector('.mobile-toggle');\n    const navLinks = document.querySelector('.nav-links');\n    mobileToggle === null || mobileToggle === void 0 ? void 0 : mobileToggle.addEventListener('click', function() {\n        this.classList.toggle('active');\n        navLinks.classList.toggle('active');\n        document.body.classList.toggle('menu-open');\n    });\n    // Close mobile menu when clicking outside\n    document.addEventListener('click', (e)=>{\n        if (!navLinks.contains(e.target) && !mobileToggle.contains(e.target)) {\n            mobileToggle.classList.remove('active');\n            navLinks.classList.remove('active');\n            document.body.classList.remove('menu-open');\n        }\n    });\n});\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    // Toggle functionality for \"Who We Help\" section\n    const toggleButtons = document.querySelectorAll('.toggle-button');\n    const contentPanels = document.querySelectorAll('.content-panel');\n    toggleButtons.forEach((button)=>{\n        button.addEventListener('click', ()=>{\n            const target = button.getAttribute('data-target');\n            // Update button states\n            toggleButtons.forEach((btn)=>btn.classList.remove('active'));\n            button.classList.add('active');\n            // Update content panels\n            contentPanels.forEach((panel)=>{\n                if (panel.id === `${target}-content`) {\n                    panel.classList.add('active');\n                    // Trigger animation\n                    panel.style.opacity = '0';\n                    panel.style.transform = 'translateY(20px)';\n                    setTimeout(()=>{\n                        panel.style.opacity = '1';\n                        panel.style.transform = 'translateY(0)';\n                    }, 50);\n                } else panel.classList.remove('active');\n            });\n        });\n    });\n    // Initialize first panel\n    const firstPanel = document.querySelector('.content-panel');\n    if (firstPanel) {\n        firstPanel.style.opacity = '1';\n        firstPanel.style.transform = 'translateY(0)';\n    }\n});\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    // Safely handle element queries\n    const handleElementSafely = (selector, callback)=>{\n        const element = document.querySelector(selector);\n        if (element) callback(element);\n    };\n    // Initialize navigation\n    handleElementSafely('.navbar', (navbar)=>{\n        window.addEventListener('scroll', ()=>{\n            if (window.scrollY > 50) navbar.classList.add('scrolled');\n            else navbar.classList.remove('scrolled');\n        });\n    });\n    // Initialize mobile menu\n    handleElementSafely('.mobile-menu-toggle', (menuToggle)=>{\n        const mobileMenu = document.querySelector('.mobile-menu');\n        const overlay = document.querySelector('.mobile-menu-overlay');\n        if (mobileMenu && overlay) {\n            menuToggle.addEventListener('click', ()=>{\n                mobileMenu.classList.toggle('active');\n                overlay.classList.toggle('active');\n                document.body.classList.toggle('menu-open');\n            });\n            overlay.addEventListener('click', ()=>{\n                mobileMenu.classList.remove('active');\n                overlay.classList.remove('active');\n                document.body.classList.remove('menu-open');\n            });\n        }\n    });\n// Initialize other features...\n});\n\n//# sourceMappingURL=404.1c9f2a78.js.map\n","// Helper function to generate random numbers in a range\nfunction randomInRange(min, max) {\n    return Math.random() * (max - min) + min;\n}\n\nfunction initLavaLampEffect() {\n    const shapesContainer = document.querySelector('.gradient-shapes');\n    if (!shapesContainer) return;\n\n    const NUM_WAVES = 50;\n    const COLORS = [\n        'rgb(178, 255, 178)',  // Light mint\n        'rgb(144, 238, 144)',  // Light green\n        'rgb(152, 251, 152)',  // Pale green\n        'rgb(255, 255, 255)'   // White\n    ];\n\n    const fragment = document.createDocumentFragment();\n\n    for (let i = 0; i < NUM_WAVES; i++) {\n        const wave = document.createElement('div');\n        const color = COLORS[i % COLORS.length];\n        const height = randomInRange(100, 200);\n        const width = randomInRange(300, 1000);\n        \n        // Create more varied starting positions\n        const x = randomInRange(-50, 150);\n        const y = randomInRange(-50, 150);\n        \n        // Randomize animation parameters\n        const duration = randomInRange(20, 40);\n        const delay = randomInRange(0, 20);\n        const direction = Math.random() > 0.5 ? 1 : -1;\n        \n        // Set custom properties for dynamic animations\n        wave.style.setProperty('--wave-x', `${randomInRange(100, 200) * direction}px`);\n        wave.style.setProperty('--wave-y', `${randomInRange(100, 200) * direction}px`);\n        wave.style.setProperty('--wave-rotate', `${randomInRange(-180, 180)}deg`);\n        wave.style.setProperty('--wave-scale', randomInRange(0.8, 1.2).toString());\n        wave.style.setProperty('--duration', `${duration}s`);\n\n        wave.style.cssText += `\n            position: absolute;\n            width: ${width}px;\n            height: ${height}px;\n            left: ${x}%;\n            top: ${y}%;\n            background: ${color};\n            border-radius: 50% 50% 50% 50% / 20% 20% 80% 80%;\n            filter: blur(${height / 3}px);\n            animation: waveFloat var(--duration) ease-in-out infinite;\n            animation-delay: -${delay}s;\n            will-change: transform;\n            transform: translateZ(0);\n        `;\n        fragment.appendChild(wave);\n    }\n\n    shapesContainer.appendChild(fragment);\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    initLavaLampEffect();\n});\n\nfunction initNavigation() {\n    const navbar = document.querySelector('.navbar');\n    const hero = document.querySelector('.hero');\n    let lastScroll = 0;\n    let ticking = false;\n\n    function updateNav() {\n        const currentScroll = window.pageYOffset;\n        const heroHeight = hero.offsetHeight;\n\n        // Show/hide navbar based on scroll direction and position\n        if (currentScroll > lastScroll && currentScroll > heroHeight) {\n            // Scrolling down & past hero - hide navbar\n            navbar.classList.add('navbar-hidden');\n        } else {\n            // Scrolling up - show navbar\n            navbar.classList.remove('navbar-hidden');\n            \n            // Add background when scrolling\n            if (currentScroll > 50) {\n                navbar.classList.add('navbar-scrolled');\n            } else {\n                navbar.classList.remove('navbar-scrolled');\n            }\n        }\n\n        lastScroll = currentScroll;\n        ticking = false;\n    }\n\n    window.addEventListener('scroll', () => {\n        if (!ticking) {\n            requestAnimationFrame(updateNav);\n            ticking = true;\n        }\n    });\n\n    // Initial check\n    updateNav();\n}\n\nfunction initValuePropSection() {\n    // Create background shapes\n    const shapesContainer = document.querySelector('.value-bg-shapes');\n    const numShapes = 5;\n\n    for (let i = 0; i < numShapes; i++) {\n        const shape = document.createElement('div');\n        shape.className = 'bg-shape';\n        \n        const size = Math.random() * 300 + 200;\n        const x = Math.random() * 100;\n        const y = Math.random() * 100;\n        \n        shape.style.cssText = `\n            width: ${size}px;\n            height: ${size}px;\n            left: ${x}%;\n            top: ${y}%;\n            opacity: ${Math.random() * 0.5};\n        `;\n        \n        shapesContainer.appendChild(shape);\n    }\n\n    // Scroll animations\n    const cards = document.querySelectorAll('.value-card');\n    const observer = new IntersectionObserver(\n        (entries) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    entry.target.style.opacity = '1';\n                    entry.target.style.transform = 'translateY(0)';\n                }\n            });\n        },\n        { threshold: 0.1 }\n    );\n\n    cards.forEach(card => observer.observe(card));\n}\n\nfunction initTextColorEffect() {\n    const heroContent = document.querySelector('.hero-content');\n    const colorLayer = document.createElement('div');\n    colorLayer.className = 'color-interaction-layer';\n    \n    // Create color points that follow blobs\n    function createColorPoints() {\n        const colors = [\n            'rgba(152, 251, 152, 0.8)',\n            'rgba(50, 205, 50, 0.7)',\n            'rgba(34, 139, 34, 0.6)',\n            'rgba(0, 128, 0, 0.7)',\n            'rgba(255, 255, 255, 0.6)'\n        ];\n\n        const points = [];\n        for (let i = 0; i < 5; i++) {\n            const point = document.createElement('div');\n            point.style.cssText = `\n                position: absolute;\n                width: 200px;\n                height: 200px;\n                border-radius: 50%;\n                background: ${colors[i % colors.length]};\n                filter: blur(10px);\n                transition: all 0.5s ease;\n            `;\n            colorLayer.appendChild(point);\n            points.push(point);\n        }\n        return points;\n    }\n\n    // Animate color points\n    function animatePoints(points) {\n        points.forEach((point, index) => {\n            const angle = (index / points.length) * Math.PI * 2;\n            const radius = 150;\n            const speed = 0.001;\n            let time = index * 1000;\n\n            function update() {\n                time += 16;\n                const x = Math.cos(angle + time * speed) * radius + 50;\n                const y = Math.sin(angle + time * speed) * radius + 50;\n                point.style.transform = `translate(${x}%, ${y}%)`;\n                requestAnimationFrame(update);\n            }\n            update();\n        });\n    }\n\n    // Initialize\n    heroContent.style.position = 'relative';\n    heroContent.insertBefore(colorLayer, heroContent.firstChild);\n    const points = createColorPoints();\n    animatePoints(points);\n}\n\nfunction initParallaxEffects() {\n    const parallaxElements = document.querySelectorAll('.parallax');\n    let ticking = false;\n\n    window.addEventListener('scroll', () => {\n        if (!ticking) {\n            window.requestAnimationFrame(() => {\n                parallaxElements.forEach(element => {\n                    const speed = element.dataset.speed || 0.5;\n                    const rect = element.getBoundingClientRect();\n                    const scrolled = window.pageYOffset;\n                    \n                    if (rect.top <= window.innerHeight && rect.bottom >= 0) {\n                        element.style.transform = `translateY(${scrolled * speed}px)`;\n                    }\n                });\n                ticking = false;\n            });\n            ticking = true;\n        }\n    });\n}\n\nfunction initHoverEffects() {\n    const cards = document.querySelectorAll('.feature-card, .value-card');\n    \n    cards.forEach(card => {\n        card.addEventListener('mousemove', (e) => {\n            const rect = card.getBoundingClientRect();\n            const x = e.clientX - rect.left;\n            const y = e.clientY - rect.top;\n\n            card.style.setProperty('--mouse-x', `${x}px`);\n            card.style.setProperty('--mouse-y', `${y}px`);\n        });\n\n        card.addEventListener('mouseleave', () => {\n            card.style.setProperty('--mouse-x', '0px');\n            card.style.setProperty('--mouse-y', '0px');\n        });\n    });\n}\n\nfunction initSmoothScroll() {\n    const links = document.querySelectorAll('a[href^=\"#\"]');\n    \n    links.forEach(link => {\n        link.addEventListener('click', (e) => {\n            e.preventDefault();\n            const target = document.querySelector(link.getAttribute('href'));\n            if (target) {\n                target.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'start'\n                });\n            }\n        });\n    });\n}\n\nfunction initIntersectionObserver() {\n    const options = {\n        root: null,\n        rootMargin: '0px',\n        threshold: 0.1\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                entry.target.classList.add('in-view');\n                if (entry.target.dataset.delay) {\n                    entry.target.style.transitionDelay = entry.target.dataset.delay;\n                }\n            }\n        });\n    }, options);\n\n    document.querySelectorAll('.animate-on-scroll').forEach(el => observer.observe(el));\n}\n\nfunction initSuccessMetrics() {\n    const complianceData = [\n        { month: 'Jan', score: 45 },\n        { month: 'Feb', score: 52 },\n        { month: 'Mar', score: 63 },\n        { month: 'Apr', score: 71 },\n        { month: 'May', score: 78 },\n        { month: 'Jun', score: 86 }\n    ];\n\n    const billingData = [\n        { month: 'Jan', accuracy: 55 },\n        { month: 'Feb', accuracy: 65 },\n        { month: 'Mar', accuracy: 72 },\n        { month: 'Apr', accuracy: 80 },\n        { month: 'May', accuracy: 88 },\n        { month: 'Jun', accuracy: 95 }\n    ];\n\n    function createChart(container, data, options) {\n        // Clear any existing content\n        container.innerHTML = '';\n        \n        const { valueKey, color, id } = options;\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('height', '100%');\n        svg.style.minHeight = '250px';\n        container.appendChild(svg);\n\n        // Create gradient with unique ID\n        const defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        const gradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        const gradientId = `gradient-${id}`;\n        gradient.setAttribute('id', gradientId);\n        gradient.setAttribute('x1', '0');\n        gradient.setAttribute('y1', '0');\n        gradient.setAttribute('x2', '0');\n        gradient.setAttribute('y2', '1');\n\n        const stop1 = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n        stop1.setAttribute('offset', '0%');\n        stop1.setAttribute('stop-color', color);\n        stop1.setAttribute('stop-opacity', '0.2');\n\n        const stop2 = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n        stop2.setAttribute('offset', '100%');\n        stop2.setAttribute('stop-color', color);\n        stop2.setAttribute('stop-opacity', '0');\n\n        gradient.appendChild(stop1);\n        gradient.appendChild(stop2);\n        defs.appendChild(gradient);\n        svg.appendChild(defs);\n\n        // Calculate dimensions\n        const margin = { top: 20, right: 30, bottom: 40, left: 50 };\n        const width = container.clientWidth - margin.left - margin.right;\n        const height = 250 - margin.top - margin.bottom;\n\n        // Create scales with adjusted domain for y-axis\n        const xScale = d3.scalePoint()\n            .domain(data.map(d => d.month))\n            .range([0, width])\n            .padding(0.5);\n\n        const yScale = d3.scaleLinear()\n            .domain([40, 100]) // Start from 40 to make the changes more visible\n            .range([height, 0])\n            .nice();\n\n        // Create line generator\n        const line = d3.line()\n            .x(d => xScale(d.month))\n            .y(d => yScale(d[valueKey]))\n            .curve(d3.curveMonotoneX);\n\n        // Create area generator\n        const area = d3.area()\n            .x(d => xScale(d.month))\n            .y0(height)\n            .y1(d => yScale(d[valueKey]))\n            .curve(d3.curveMonotoneX);\n\n        // Create group element\n        const g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n        g.setAttribute('transform', `translate(${margin.left},${margin.top})`);\n        svg.appendChild(g);\n\n        // Add grid lines\n        const gridLines = g.appendChild(document.createElementNS('http://www.w3.org/2000/svg', 'g'));\n        gridLines.setAttribute('class', 'chart-grid');\n\n        yScale.ticks(5).forEach(tick => {\n            const line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n            line.setAttribute('x1', 0);\n            line.setAttribute('x2', width);\n            line.setAttribute('y1', yScale(tick));\n            line.setAttribute('y2', yScale(tick));\n            gridLines.appendChild(line);\n        });\n\n        // Add area\n        const areaPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        areaPath.setAttribute('class', 'chart-area');\n        areaPath.setAttribute('d', area(data));\n        areaPath.style.fill = `url(#${gradientId})`;\n        g.appendChild(areaPath);\n\n        // Add line\n        const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('class', 'chart-line');\n        path.setAttribute('d', line(data));\n        path.style.stroke = color;\n        g.appendChild(path);\n\n        // Add points\n        data.forEach(d => {\n            const point = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            point.setAttribute('class', 'chart-point');\n            point.setAttribute('cx', xScale(d.month));\n            point.setAttribute('cy', yScale(d[valueKey]));\n            point.setAttribute('r', 6);\n            point.style.stroke = color;\n            g.appendChild(point);\n        });\n\n        // Add axes\n        const xAxis = g.appendChild(document.createElementNS('http://www.w3.org/2000/svg', 'g'));\n        xAxis.setAttribute('class', 'chart-axis');\n        xAxis.setAttribute('transform', `translate(0,${height})`);\n\n        data.forEach(d => {\n            const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n            text.setAttribute('class', 'chart-axis-label');\n            text.setAttribute('x', xScale(d.month));\n            text.setAttribute('y', 25);\n            text.setAttribute('text-anchor', 'middle');\n            text.textContent = d.month;\n            xAxis.appendChild(text);\n        });\n\n        const yAxis = g.appendChild(document.createElementNS('http://www.w3.org/2000/svg', 'g'));\n        yAxis.setAttribute('class', 'chart-axis');\n\n        yScale.ticks(5).forEach(tick => {\n            const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n            text.setAttribute('class', 'chart-axis-label');\n            text.setAttribute('x', -10);\n            text.setAttribute('y', yScale(tick));\n            text.setAttribute('text-anchor', 'end');\n            text.setAttribute('dominant-baseline', 'middle');\n            text.textContent = `${tick}%`;\n            yAxis.appendChild(text);\n        });\n    }\n\n    // Initialize charts with unique IDs\n    const complianceChart = document.querySelector('.compliance-chart');\n    const billingChart = document.querySelector('.billing-chart');\n\n    if (complianceChart) {\n        createChart(complianceChart, complianceData, {\n            valueKey: 'score',\n            color: '#34D399',\n            id: 'compliance'\n        });\n    }\n\n    if (billingChart) {\n        createChart(billingChart, billingData, {\n            valueKey: 'accuracy',\n            color: '#0B4B3F',\n            id: 'billing'\n        });\n    }\n}\n\n// How It Works Section Functionality\nfunction initHowItWorks() {\n    const stepButtons = document.querySelectorAll('.step-nav-button');\n    const stepPanels = document.querySelectorAll('.step-panel');\n    const beforeAfterToggles = document.querySelectorAll('.before-after-toggle .toggle-btn');\n    \n    // Initialize first step as active\n    if (stepButtons.length > 0 && stepPanels.length > 0) {\n        stepButtons[0].classList.add('active');\n        stepPanels[0].classList.add('active');\n    }\n\n    // Step navigation functionality\n    stepButtons.forEach((button, index) => {\n        button.addEventListener('click', () => {\n            // Remove active class from all buttons and panels\n            stepButtons.forEach(btn => btn.classList.remove('active'));\n            stepPanels.forEach(panel => panel.classList.remove('active'));\n            \n            // Add active class to clicked button and corresponding panel\n            button.classList.add('active');\n            stepPanels[index].classList.add('active');\n        });\n    });\n\n    // Before/After toggle functionality\n    beforeAfterToggles.forEach(toggle => {\n        toggle.addEventListener('click', () => {\n            const parent = toggle.closest('.before-after-toggle');\n            parent.querySelectorAll('.toggle-btn').forEach(btn => btn.classList.remove('active'));\n            toggle.classList.add('active');\n            \n            // Get the visual container\n            const visualContainer = toggle.closest('.step-visual').querySelector('.visual-container');\n            \n            // Toggle the visual state\n            if (toggle.dataset.state === 'before') {\n                visualContainer.style.opacity = '0.7';\n                setTimeout(() => {\n                    // Update visual content for 'before' state\n                    visualContainer.style.opacity = '1';\n                }, 300);\n            } else {\n                visualContainer.style.opacity = '0.7';\n                setTimeout(() => {\n                    // Update visual content for 'after' state\n                    visualContainer.style.opacity = '1';\n                }, 300);\n            }\n        });\n    });\n\n    // Add intersection observer for step animations\n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                entry.target.style.opacity = '1';\n                entry.target.style.transform = 'translateY(0)';\n            }\n        });\n    }, {\n        threshold: 0.1\n    });\n\n    // Observe step panels for scroll animations\n    stepPanels.forEach(panel => {\n        panel.style.opacity = '0';\n        panel.style.transform = 'translateY(20px)';\n        observer.observe(panel);\n    });\n}\n\nfunction animateCounter(element, targetValue, duration = 2000) {\n    const startValue = 0;\n    const increment = targetValue / (duration / 16); // 60fps\n    let currentValue = startValue;\n\n    function updateCounter() {\n        currentValue = Math.min(currentValue + increment, targetValue);\n        if (targetValue % 1 === 0) {\n            // For whole numbers\n            element.textContent = Math.floor(currentValue) + (element.dataset.suffix || '');\n        } else {\n            // For percentages or decimals\n            element.textContent = currentValue.toFixed(1) + (element.dataset.suffix || '');\n        }\n\n        if (currentValue < targetValue) {\n            requestAnimationFrame(updateCounter);\n        }\n    }\n\n    updateCounter();\n}\n\nfunction initMetricCounters() {\n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                const card = entry.target;\n                const numberElement = card.querySelector('.metric-number');\n                const targetValue = parseFloat(card.dataset.count);\n                \n                // Add the + or % suffix if present in the HTML\n                const currentText = numberElement.textContent;\n                const suffix = currentText.match(/[+%]/)?.[0] || '';\n                numberElement.dataset.suffix = suffix;\n                \n                animateCounter(numberElement, targetValue);\n                observer.unobserve(card);\n            }\n        });\n    }, {\n        threshold: 0.2\n    });\n\n    document.querySelectorAll('.metric-card').forEach(card => {\n        observer.observe(card);\n    });\n}\n\n// Initialize all sections\ndocument.addEventListener('DOMContentLoaded', () => {\n    initLavaLampEffect();\n    initNavigation();\n    initParallaxEffects();\n    initHoverEffects();\n    initSmoothScroll();\n    initIntersectionObserver();\n    initSuccessMetrics();\n    initHowItWorks();\n    initMetricCounters();\n});\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const navbar = document.querySelector('.navbar');\n    let lastScroll = 0;\n    let ticking = false;\n    \n    // Throttled scroll handler\n    window.addEventListener('scroll', () => {\n        if (!ticking) {\n            window.requestAnimationFrame(() => {\n                const currentScroll = window.pageYOffset;\n                \n                // Only trigger the hide/show after scrolling 50px\n                if (Math.abs(currentScroll - lastScroll) > 50) {\n                    if (currentScroll > lastScroll && currentScroll > 80) {\n                        // Scrolling down - hide navbar\n                        navbar.classList.add('scrolled');\n                    } else {\n                        // Scrolling up - show navbar\n                        navbar.classList.remove('scrolled');\n                    }\n                    lastScroll = currentScroll;\n                }\n                \n                ticking = false;\n            });\n            \n            ticking = true;\n        }\n    }, { passive: true });\n\n    // Mobile menu functionality\n    const mobileToggle = document.querySelector('.mobile-toggle');\n    const navLinks = document.querySelector('.nav-links');\n    \n    mobileToggle?.addEventListener('click', function() {\n        this.classList.toggle('active');\n        navLinks.classList.toggle('active');\n        document.body.classList.toggle('menu-open');\n    });\n\n    // Close mobile menu when clicking outside\n    document.addEventListener('click', (e) => {\n        if (!navLinks.contains(e.target) && !mobileToggle.contains(e.target)) {\n            mobileToggle.classList.remove('active');\n            navLinks.classList.remove('active');\n            document.body.classList.remove('menu-open');\n        }\n    });\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Toggle functionality for \"Who We Help\" section\n    const toggleButtons = document.querySelectorAll('.toggle-button');\n    const contentPanels = document.querySelectorAll('.content-panel');\n\n    toggleButtons.forEach(button => {\n        button.addEventListener('click', () => {\n            const target = button.getAttribute('data-target');\n            \n            // Update button states\n            toggleButtons.forEach(btn => btn.classList.remove('active'));\n            button.classList.add('active');\n            \n            // Update content panels\n            contentPanels.forEach(panel => {\n                if (panel.id === `${target}-content`) {\n                    panel.classList.add('active');\n                    // Trigger animation\n                    panel.style.opacity = '0';\n                    panel.style.transform = 'translateY(20px)';\n                    setTimeout(() => {\n                        panel.style.opacity = '1';\n                        panel.style.transform = 'translateY(0)';\n                    }, 50);\n                } else {\n                    panel.classList.remove('active');\n                }\n            });\n        });\n    });\n\n    // Initialize first panel\n    const firstPanel = document.querySelector('.content-panel');\n    if (firstPanel) {\n        firstPanel.style.opacity = '1';\n        firstPanel.style.transform = 'translateY(0)';\n    }\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Safely handle element queries\n    const handleElementSafely = (selector, callback) => {\n        const element = document.querySelector(selector);\n        if (element) {\n            callback(element);\n        }\n    };\n\n    // Initialize navigation\n    handleElementSafely('.navbar', (navbar) => {\n        window.addEventListener('scroll', () => {\n            if (window.scrollY > 50) {\n                navbar.classList.add('scrolled');\n            } else {\n                navbar.classList.remove('scrolled');\n            }\n        });\n    });\n\n    // Initialize mobile menu\n    handleElementSafely('.mobile-menu-toggle', (menuToggle) => {\n        const mobileMenu = document.querySelector('.mobile-menu');\n        const overlay = document.querySelector('.mobile-menu-overlay');\n\n        if (mobileMenu && overlay) {\n            menuToggle.addEventListener('click', () => {\n                mobileMenu.classList.toggle('active');\n                overlay.classList.toggle('active');\n                document.body.classList.toggle('menu-open');\n            });\n\n            overlay.addEventListener('click', () => {\n                mobileMenu.classList.remove('active');\n                overlay.classList.remove('active');\n                document.body.classList.remove('menu-open');\n            });\n        }\n    });\n\n    // Initialize other features...\n});\n"],"names":["randomInRange","min","max","Math","random","initLavaLampEffect","shapesContainer","document","querySelector","COLORS","fragment","createDocumentFragment","i","wave","createElement","color","length","height","width","x","y","duration","delay","direction","style","setProperty","toString","cssText","appendChild","addEventListener","initNavigation","navbar","hero","lastScroll","ticking","updateNav","currentScroll","window","pageYOffset","heroHeight","offsetHeight","classList","add","remove","requestAnimationFrame","initParallaxEffects","parallaxElements","querySelectorAll","forEach","element","speed","dataset","rect","getBoundingClientRect","scrolled","top","innerHeight","bottom","transform","cards","card","e","clientX","left","clientY","links","link","preventDefault","target","getAttribute","scrollIntoView","behavior","block","initIntersectionObserver","observer","IntersectionObserver","entries","entry","isIntersecting","transitionDelay","root","rootMargin","threshold","el","observe","initSuccessMetrics","createChart","container","data","options","innerHTML","valueKey","id","svg","createElementNS","setAttribute","minHeight","defs","gradient","gradientId","stop1","stop2","clientWidth","xScale","d3","scalePoint","domain","map","d","month","range","padding","yScale","scaleLinear","nice","line","curve","curveMonotoneX","area","y0","y1","g","gridLines","ticks","tick","areaPath","fill","path","stroke","point","xAxis","text","textContent","yAxis","complianceChart","billingChart","score","accuracy","initHowItWorks","stepButtons","stepPanels","beforeAfterToggles","button","index","btn","panel","toggle","parent","closest","visualContainer","state","opacity","setTimeout","initMetricCounters","_currentText_match","numberElement","targetValue","parseFloat","count","suffix","currentText","match","animateCounter","increment","currentValue","updateCounter","floor","toFixed","unobserve","abs","passive","mobileToggle","navLinks","body","contains","toggleButtons","contentPanels","firstPanel","handleElementSafely","selector","callback","scrollY","menuToggle","mobileMenu","overlay"],"version":3,"file":"404.1c9f2a78.js.map"}